"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _os = _interopRequireDefault(require("os"));

var _winstonTransport = _interopRequireDefault(require("winston-transport"));

var _common = require("./utils/common");

var _defaults = require("./defaults");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable promise/prefer-await-to-callbacks */
class Console extends _winstonTransport.default {
  constructor(options = {}) {
    super(options);
    this.name = options.name || 'console';
    this.eol = options.eol || _os.default.EOL;
    this.logger = options.logger || console;
    this.fallBackLogger = options.fallBackLogger || _defaults.defaultLogger;
    this.handlers = options.levels || {};
    this.sanitizer = options.sanitizer || _defaults.defaultSanitizer;
    this.setMaxListeners(options.maxListeners || _defaults.defaultMaxListeners);
  }

  log(info, callback) {
    setImmediate(() => {
      this.emit('logged', info);
    });
    const level = info[_constants.LEVEL];
    const message = info[_constants.MESSAGE];
    const log = [this.handlers[level], this.logger[this.handlers[level]], this.logger[level], this.fallBackLogger].find(element => (0, _common.isLoggable)(element));
    log(this.sanitizer(message));
    callback();
  }

}

exports.default = Console;
module.exports = exports.default;
module.exports.default = exports.default;